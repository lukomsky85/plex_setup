#!/bin/bash

# –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Plex + —ç–∫–æ—Å–∏—Å—Ç–µ–º–∞ (Tautulli, Overseerr, Sonarr –∏ –¥—Ä.)
# –ü–æ–¥–¥–µ—Ä–∂–∫–∞: Ubuntu, Debian, RHEL, Rocky, AlmaLinux, CentOS, Fedora
# –ó–∞–ø—É—Å–∫: sudo ./setup_plex_full.sh [install|remove]

set -e  # –ü—Ä–µ—Ä—ã–≤–∞—Ç—å –ø—Ä–∏ –æ—à–∏–±–∫–∞—Ö

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ root
if [[ $EUID -ne 0 ]]; then
   echo "‚ùå –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –¥–æ–ª–∂–µ–Ω –∑–∞–ø—É—Å–∫–∞—Ç—å—Å—è —Å –ø—Ä–∞–≤–∞–º–∏ root –∏–ª–∏ —á–µ—Ä–µ–∑ sudo"
   exit 1
fi

# –ü—É—Ç—å –∫ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è–º
CONFIG_DIR="/opt/plex-ecosystem"
COMPOSE_FILE="$CONFIG_DIR/docker-compose.yml"

# –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –û–°
detect_os() {
    if [ -f /etc/os-release ]; then
        . /etc/os-release
        OS_ID=$ID
        OS_VERSION=$VERSION_ID
        OS_NAME=$NAME
    else
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –û–°"
        exit 1
    fi
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
install_base_packages() {
    echo "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–∞–∑–æ–≤—ã—Ö –ø–∞–∫–µ—Ç–æ–≤ (curl, gnupg, wget, ca-certificates, jq)..."
    if command -v apt &> /dev/null; then
        apt update && apt install -y curl gnupg wget ca-certificates jq
    elif command -v dnf &> /dev/null; then
        dnf install -y curl gnupg wget ca-certificates jq
    elif command -v yum &> /dev/null; then
        yum install -y curl gnupg wget ca-certificates jq
    else
        echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–∞–∫–µ—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä (apt/dnf/yum)"
        exit 1
    fi
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –∏ Docker Compose
install_docker() {
    if ! command -v docker &> /dev/null; then
        echo "üê≥ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker..."
        if ! command -v curl &> /dev/null; then
            echo "‚ö†Ô∏è –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º curl..."
            install_base_packages
        fi

        if [[ "$OS_ID" == "almalinux" || "$OS_ID" == "rocky" || "$OS_ID" == "centos" ]]; then
            echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker –Ω–∞ $OS_NAME..."
            yum install -y yum-utils
            yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
            yum install -y docker-ce docker-ce-cli containerd.io
        elif [[ "$OS_ID" == "ubuntu" || "$OS_ID" == "debian" ]]; then
            curl -fsSL https://get.docker.com | sh
        else
            echo "‚ùå –û–° $OS_NAME –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Docker"
            exit 1
        fi

        systemctl enable docker
        systemctl start docker
    else
        echo "‚úÖ Docker —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker Compose (V2 plugin)
    if docker compose version &> /dev/null; then
        echo "‚úÖ Docker Compose Plugin —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    else
        echo "üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Docker Compose Plugin..."
        if [[ "$OS_ID" == "almalinux" || "$OS_ID" == "rocky" || "$OS_ID" == "centos" ]]; then
            yum install -y docker-compose-plugin
        elif [[ "$OS_ID" == "ubuntu" || "$OS_ID" == "debian" ]]; then
            apt install -y docker-compose-plugin
        fi
        
        if ! docker compose version &> /dev/null; then
            echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Docker Compose Plugin"
            exit 1
        fi
    fi

    # –°–æ–∑–¥–∞–µ–º alias –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏
    if ! command -v docker-compose &> /dev/null && [ -f /usr/libexec/docker/cli-plugins/docker-compose ]; then
        ln -s /usr/libexec/docker/cli-plugins/docker-compose /usr/local/bin/docker-compose
    fi
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Plex
install_plex() {
    echo "üöÄ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Plex Media Server..."
    if [[ "$OS_ID" == "ubuntu" || "$OS_ID" == "debian" ]]; then
        apt update
        apt install -y curl gnupg apt-transport-https
        curl -fsSL https://downloads.plex.tv/plex-keys/PlexSign.key | gpg --dearmor -o /usr/share/keyrings/plex-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/plex-archive-keyring.gpg] https://downloads.plex.tv/repo/deb public main" > /etc/apt/sources.list.d/plex.list
        apt update
        apt install -y plexmediaserver
        systemctl enable plexmediaserver
        systemctl start plexmediaserver
    elif [[ "$OS_ID" == "rhel" || "$OS_ID" == "centos" || "$OS_ID" == "rocky" || "$OS_ID" == "almalinux" ]]; then
        echo "üîß –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
        yum install -y curl wget
        
        echo "üì¶ –°–∫–∞—á–∏–≤–∞–µ–º –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Plex –≤—Ä—É—á–Ω—É—é..."
        LATEST_URL=$(curl -s https://plex.tv/api/downloads/5.json | jq -r '.computer.Linux.releases[] | select(.build=="linux-x86_64" and .distro=="redhat").url')
        
        if [ -z "$LATEST_URL" ]; then
            echo "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å URL –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è Plex"
            exit 1
        fi
        
        echo "‚¨áÔ∏è –°–∫–∞—á–∏–≤–∞–µ–º Plex: $LATEST_URL"
        wget -O /tmp/plex.rpm "$LATEST_URL"
        
        echo "üì¶ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Plex (–±–µ–∑ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∏)..."
        yum localinstall -y --nogpgcheck /tmp/plex.rpm
        
        echo "üßπ –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª..."
        rm -f /tmp/plex.rpm
        
        echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º Plex..."
        systemctl enable plexmediaserver
        systemctl start plexmediaserver
    else
        echo "‚ùå –û–° $OS_NAME –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è"
        exit 1
    fi
}

# –£–¥–∞–ª–µ–Ω–∏–µ Plex
remove_plex() {
    echo "üßπ –£–¥–∞–ª—è–µ–º Plex Media Server..."
    systemctl stop plexmediaserver || true
    systemctl disable plexmediaserver || true

    if command -v dpkg &> /dev/null && dpkg -l | grep -q plexmediaserver; then
        apt purge -y plexmediaserver
    elif command -v rpm &> /dev/null && rpm -q plexmediaserver > /dev/null; then
        if command -v dnf &> /dev/null; then
            dnf remove -y plexmediaserver
        else
            yum remove -y plexmediaserver
        fi
    fi

    rm -f /etc/apt/sources.list.d/plex.list
    rm -f /etc/yum.repos.d/plex.repo
    rm -f /usr/share/keyrings/plex-archive-keyring.gpg
    echo "‚úÖ Plex —É–¥–∞–ª—ë–Ω"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã —á–µ—Ä–µ–∑ Docker
install_ecosystem() {
    echo "üìÅ –°–æ–∑–¥–∞—ë–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –∫–æ–Ω—Ñ–∏–≥–æ–≤: $CONFIG_DIR"
    mkdir -p "$CONFIG_DIR" /data/torrents /data/media

    echo "üìÑ –°–æ–∑–¥–∞—ë–º docker-compose.yml —Å –ø–æ–ª–Ω–æ–π —ç–∫–æ—Å–∏—Å—Ç–µ–º–æ–π..."
    cat > "$COMPOSE_FILE" << 'EOF'
services:
  plex:
    image: plexinc/pms-docker:latest
    container_name: plex
    network_mode: host
    restart: unless-stopped
    environment:
      - PLEX_UID=1000
      - PLEX_GID=1000
      - VERSION=public
      - TZ=Europe/Moscow
    volumes:
      - /var/lib/plexmediaserver:/config
      - /data/media:/data:ro

  tautulli:
    image: tautulli/tautulli:latest
    container_name: tautulli
    ports:
      - "8181:8181"
    restart: unless-stopped
    environment:
      - TZ=Europe/Moscow
    volumes:
      - /opt/tautulli:/config
      - /var/lib/plexmediaserver/Library/Application\ Support/Plex\ Media\ Server/Logs:/logs:ro

  overseerr:
    image: sctx/overseerr:latest
    container_name: overseerr
    ports:
      - "5055:5055"
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Moscow
    volumes:
      - /opt/overseerr:/app/config

  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    ports:
      - "5056:5056"
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Moscow
    volumes:
      - /opt/jellyseerr:/app/config

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    ports:
      - "8989:8989"
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Moscow
    volumes:
      - /opt/sonarr:/config
      - /data/media:/data
      - /data/torrents:/downloads

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    ports:
      - "7878:7878"
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Moscow
    volumes:
      - /opt/radarr:/config
      - /data/media:/data
      - /data/torrents:/downloads

  lidarr:
    image: lscr.io/linuxserver/lidarr:latest
    container_name: lidarr
    ports:
      - "8686:8686"
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Moscow
    volumes:
      - /opt/lidarr:/config
      - /data/media:/data
      - /data/torrents:/downloads

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    ports:
      - "8080:8080"
      - "6881:6881"
      - "6881:6881/udp"
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Europe/Moscow
      - WEBUI_PORT=8080
    volumes:
      - /opt/qbittorrent:/config
      - /data/torrents:/downloads
      - /data/media:/data

  plex-meta-manager:
    image: meisnate12/plex-meta-manager:latest
    container_name: plex-meta-manager
    restart: unless-stopped
    environment:
      - TZ=Europe/Moscow
    volumes:
      - /opt/pmm/config:/config
      - /opt/pmm/logs:/logs
      - /var/lib/plexmediaserver/Library/Application\ Support/Plex\ Media\ Server:/plex
EOF

    echo "üöÄ –ó–∞–ø—É—Å–∫–∞–µ–º Docker-–∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã..."
    cd "$CONFIG_DIR"
    
    # –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –≤—ã–∑–æ–≤ Docker Compose
    if docker compose version &> /dev/null; then
        docker compose up -d
    elif command -v docker-compose &> /dev/null; then
        docker-compose up -d
    else
        echo "‚ùå –û—à–∏–±–∫–∞: Docker Compose –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ –∫–æ–º–∞–Ω–¥–æ–π:"
        echo "sudo apt install docker-compose-plugin  # –¥–ª—è Ubuntu/Debian"
        echo "–∏–ª–∏"
        echo "sudo yum install docker-compose-plugin  # –¥–ª—è RHEL/CentOS"
        exit 1
    fi

    echo "‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã!"
    echo "–î–æ—Å—Ç—É–ø:"
    echo "  - Plex: http://$(hostname -I | xargs):32400/web"
    echo "  - Tautulli: http://$(hostname -I | xargs):8181"
    echo "  - Overseerr: http://$(hostname -I | xargs):5055"
    echo "  - Jellyseerr: http://$(hostname -I | xargs):5056"
    echo "  - Sonarr: http://$(hostname -I | xargs):8989"
    echo "  - Radarr: http://$(hostname -I | xargs):7878"
    echo "  - Lidarr: http://$(hostname -I | xargs):8686"
    echo "  - qBittorrent: http://$(hostname -I | xargs):8080 (–ª–æ–≥–∏–Ω: admin, –ø–∞—Ä–æ–ª—å: adminadmin)"
}

# –£–¥–∞–ª–µ–Ω–∏–µ –≤—Å–µ–π —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã
remove_ecosystem() {
    echo "üßπ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ —É–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
    if [ -f "$COMPOSE_FILE" ]; then
        cd "$CONFIG_DIR"
        if docker compose version &> /dev/null; then
            docker compose down
        elif command -v docker-compose &> /dev/null; then
            docker-compose down
        fi
    fi

    echo "üóëÔ∏è –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥–æ–≤ –∏ –¥–∞–Ω–Ω—ã—Ö (–æ—Å—Ç–∞–≤—å—Ç–µ, –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏)"
    read -p "–£–¥–∞–ª–∏—Ç—å /opt/plex-ecosystem, /opt/tautulli –∏ –¥—Ä.? (y/N): " CONFIRM
    if [[ "$CONFIRM" =~ ^[Yy]$ ]]; then
        rm -rf /opt/plex-ecosystem /opt/tautulli /opt/overseerr /opt/jellyseerr /opt/sonarr /opt/radarr /opt/lidarr /opt/qbittorrent /opt/pmm
        echo "üìÅ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ —É–¥–∞–ª–µ–Ω—ã."
    fi

    echo "üîÑ –£–¥–∞–ª–µ–Ω–∏–µ Docker (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)"
    read -p "–£–¥–∞–ª–∏—Ç—å Docker? (y/N): " REMOVE_DOCKER
    if [[ "$REMOVE_DOCKER" =~ ^[Yy]$ ]]; then
        systemctl stop docker
        if [[ "$OS_ID" == "ubuntu" || "$OS_ID" == "debian" ]]; then
            apt purge -y docker-ce docker-ce-cli containerd.io
        elif [[ "$OS_ID" =~ ^(rhel|centos|rocky|almalinux)$ ]]; then
            yum remove -y docker-ce docker-ce-cli containerd.io
        fi
        rm -rf /var/lib/docker
    fi

    remove_plex
}

# –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤
status_all() {
    echo "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
    if systemctl is-active --quiet plexmediaserver; then
        echo "üü¢ Plex: –∑–∞–ø—É—â–µ–Ω"
    else
        echo "üî¥ Plex: –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
    if command -v docker &> /dev/null; then
        docker ps --format "table {{.Names}}\t{{.Status}}\t{{.Ports}}" | grep -E "(plex|tautulli|overseerr|jellyseerr|sonarr|radarr|lidarr|qbittorrent)"
    else
        echo "‚ö†Ô∏è Docker –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
}

# –ì–ª–∞–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
main() {
    detect_os
    install_base_packages

    case "${1:-install}" in
        install)
            echo "üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Plex –∏ –≤—Å–µ–π —ç–∫–æ—Å–∏—Å—Ç–µ–º—ã..."
            install_docker
            install_plex
            install_ecosystem
            ;;
        remove|uninstall)
            remove_ecosystem
            ;;
        status)
            status_all
            ;;
        *)
            echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [install | remove | status]"
            exit 1
            ;;
    esac
}

# –ó–∞–ø—É—Å–∫
main "$@"
